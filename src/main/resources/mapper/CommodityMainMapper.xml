<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.forest.mapper.CommodityMainMapper" >
  <resultMap id="BaseResultMap" type="com.forest.entity.CommodityMain" >
    <id column="cm_id" property="cmId" jdbcType="INTEGER" />
    <result column="article_no" property="articleNo" jdbcType="VARCHAR" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="cm_name" property="cmName" jdbcType="VARCHAR" />
    <result column="sale_price" property="salePrice" jdbcType="DECIMAL" />
    <result column="cost_price" property="costPrice" jdbcType="DECIMAL" />
    <result column="ct_id" property="ctId" jdbcType="INTEGER" />
    <result column="information" property="information" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cm_id, article_no, brand, cm_name, sale_price, cost_price, ct_id, information, shop_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.forest.entity.CommodityMainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodity_main
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from commodity_main
    where cm_id = #{cmId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from commodity_main
    where cm_id = #{cmId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.forest.entity.CommodityMainExample" >
    delete from commodity_main
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.forest.entity.CommodityMain" >
    insert into commodity_main (cm_id, article_no, brand, 
      cm_name, sale_price, cost_price, 
      ct_id, information, shop_id)
    values (#{cmId,jdbcType=INTEGER}, #{articleNo,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, 
      #{cmName,jdbcType=VARCHAR}, #{salePrice,jdbcType=DECIMAL}, #{costPrice,jdbcType=DECIMAL}, 
      #{ctId,jdbcType=INTEGER}, #{information,jdbcType=VARCHAR}, #{shopId,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.forest.entity.CommodityMain" >
    insert into commodity_main
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cmId != null" >
        cm_id,
      </if>
      <if test="articleNo != null" >
        article_no,
      </if>
      <if test="brand != null" >
        brand,
      </if>
      <if test="cmName != null" >
        cm_name,
      </if>
      <if test="salePrice != null" >
        sale_price,
      </if>
      <if test="costPrice != null" >
        cost_price,
      </if>
      <if test="ctId != null" >
        ct_id,
      </if>
      <if test="information != null" >
        information,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cmId != null" >
        #{cmId,jdbcType=INTEGER},
      </if>
      <if test="articleNo != null" >
        #{articleNo,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="cmName != null" >
        #{cmName,jdbcType=VARCHAR},
      </if>
      <if test="salePrice != null" >
        #{salePrice,jdbcType=DECIMAL},
      </if>
      <if test="costPrice != null" >
        #{costPrice,jdbcType=DECIMAL},
      </if>
      <if test="ctId != null" >
        #{ctId,jdbcType=INTEGER},
      </if>
      <if test="information != null" >
        #{information,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.forest.entity.CommodityMainExample" resultType="java.lang.Integer" >
    select count(*) from commodity_main
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update commodity_main
    <set >
      <if test="record.cmId != null" >
        cm_id = #{record.cmId,jdbcType=INTEGER},
      </if>
      <if test="record.articleNo != null" >
        article_no = #{record.articleNo,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null" >
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.cmName != null" >
        cm_name = #{record.cmName,jdbcType=VARCHAR},
      </if>
      <if test="record.salePrice != null" >
        sale_price = #{record.salePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.costPrice != null" >
        cost_price = #{record.costPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.ctId != null" >
        ct_id = #{record.ctId,jdbcType=INTEGER},
      </if>
      <if test="record.information != null" >
        information = #{record.information,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update commodity_main
    set cm_id = #{record.cmId,jdbcType=INTEGER},
      article_no = #{record.articleNo,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      cm_name = #{record.cmName,jdbcType=VARCHAR},
      sale_price = #{record.salePrice,jdbcType=DECIMAL},
      cost_price = #{record.costPrice,jdbcType=DECIMAL},
      ct_id = #{record.ctId,jdbcType=INTEGER},
      information = #{record.information,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.forest.entity.CommodityMain" >
    update commodity_main
    <set >
      <if test="articleNo != null" >
        article_no = #{articleNo,jdbcType=VARCHAR},
      </if>
      <if test="brand != null" >
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="cmName != null" >
        cm_name = #{cmName,jdbcType=VARCHAR},
      </if>
      <if test="salePrice != null" >
        sale_price = #{salePrice,jdbcType=DECIMAL},
      </if>
      <if test="costPrice != null" >
        cost_price = #{costPrice,jdbcType=DECIMAL},
      </if>
      <if test="ctId != null" >
        ct_id = #{ctId,jdbcType=INTEGER},
      </if>
      <if test="information != null" >
        information = #{information,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=SMALLINT},
      </if>
    </set>
    where cm_id = #{cmId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.forest.entity.CommodityMain" >
    update commodity_main
    set article_no = #{articleNo,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      cm_name = #{cmName,jdbcType=VARCHAR},
      sale_price = #{salePrice,jdbcType=DECIMAL},
      cost_price = #{costPrice,jdbcType=DECIMAL},
      ct_id = #{ctId,jdbcType=INTEGER},
      information = #{information,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=SMALLINT}
    where cm_id = #{cmId,jdbcType=INTEGER}
  </update>
  
  <select id="selectCommodityMainMax" resultType="java.lang.Integer">
  	SELECT MAX(`cm_id`)
	FROM `commodity_main`
  </select>
</mapper>