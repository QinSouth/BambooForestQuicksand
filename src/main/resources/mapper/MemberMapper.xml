<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.forest.mapper.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.forest.entity.Member" >
    <id column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="phoen" property="phoen" jdbcType="INTEGER" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="ml_id" property="mlId" jdbcType="SMALLINT" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="street" property="street" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="wechat_num" property="wechatNum" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    member_id, phoen, member_name, ml_id, password, province, city, region, street, balance, 
    integral, wechat_num, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.forest.entity.MemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from member
    where member_id = #{memberId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member
    where member_id = #{memberId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.forest.entity.MemberExample" >
    delete from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.forest.entity.Member" >
    insert into member (member_id, phoen, member_name, 
      ml_id, password, province, 
      city, region, street, 
      balance, integral, wechat_num, 
      create_time)
    values (#{memberId,jdbcType=INTEGER}, #{phoen,jdbcType=INTEGER}, #{memberName,jdbcType=VARCHAR}, 
      #{mlId,jdbcType=SMALLINT}, #{password,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, #{street,jdbcType=VARCHAR}, 
      #{balance,jdbcType=DECIMAL}, #{integral,jdbcType=INTEGER}, #{wechatNum,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.forest.entity.Member" >
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="phoen != null" >
        phoen,
      </if>
      <if test="memberName != null" >
        member_name,
      </if>
      <if test="mlId != null" >
        ml_id,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="region != null" >
        region,
      </if>
      <if test="street != null" >
        street,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="wechatNum != null" >
        wechat_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="phoen != null" >
        #{phoen,jdbcType=INTEGER},
      </if>
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="mlId != null" >
        #{mlId,jdbcType=SMALLINT},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="street != null" >
        #{street,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="wechatNum != null" >
        #{wechatNum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.forest.entity.MemberExample" resultType="java.lang.Integer" >
    select count(*) from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member
    <set >
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.phoen != null" >
        phoen = #{record.phoen,jdbcType=INTEGER},
      </if>
      <if test="record.memberName != null" >
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.mlId != null" >
        ml_id = #{record.mlId,jdbcType=SMALLINT},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null" >
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.street != null" >
        street = #{record.street,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.integral != null" >
        integral = #{record.integral,jdbcType=INTEGER},
      </if>
      <if test="record.wechatNum != null" >
        wechat_num = #{record.wechatNum,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member
    set member_id = #{record.memberId,jdbcType=INTEGER},
      phoen = #{record.phoen,jdbcType=INTEGER},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      ml_id = #{record.mlId,jdbcType=SMALLINT},
      password = #{record.password,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      street = #{record.street,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=DECIMAL},
      integral = #{record.integral,jdbcType=INTEGER},
      wechat_num = #{record.wechatNum,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.forest.entity.Member" >
    update member
    <set >
      <if test="phoen != null" >
        phoen = #{phoen,jdbcType=INTEGER},
      </if>
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="mlId != null" >
        ml_id = #{mlId,jdbcType=SMALLINT},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="street != null" >
        street = #{street,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="wechatNum != null" >
        wechat_num = #{wechatNum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.forest.entity.Member" >
    update member
    set phoen = #{phoen,jdbcType=INTEGER},
      member_name = #{memberName,jdbcType=VARCHAR},
      ml_id = #{mlId,jdbcType=SMALLINT},
      password = #{password,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      street = #{street,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL},
      integral = #{integral,jdbcType=INTEGER},
      wechat_num = #{wechatNum,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
  <select id="queryAllByPage" resultMap="BaseResultMap" parameterType="com.forest.entity.Member">
  		SELECT m.`member_id`,m.member_name,m.`phoen`,l.`ml_name`,COUNT(t.client) AS cs,SUM(t.actual_income) AS je,m.balance,m.integral FROM `member` AS m
		LEFT JOIN `member_level` AS l ON m.`ml_id`=l.`ml_id`
		LEFT JOIN `transaction_record_main` AS t ON m.`member_id`=t.`client`
		<where>
      	<if test="mlId != null" >
        and m.ml_id = #{mlId,jdbcType=SMALLINT}
      	</if>
      	<if test="memberName != null" >
        and m.member_name like '%${memberName}%'
      	</if>
      	</where>
		GROUP BY m.`member_id`
  </select>
  <insert id="insertMember" parameterType="com.forest.entity.Member" >
    insert into member (phoen, member_name, 
      ml_id, password, province, 
      city, region, street, 
      balance, integral, wechat_num, 
      create_time)
    values (#{phoen,jdbcType=INTEGER}, #{memberName,jdbcType=VARCHAR}, 
      #{mlId,jdbcType=SMALLINT}, #{password,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, #{street,jdbcType=VARCHAR}, 
      #{balance,jdbcType=DECIMAL}, #{integral,jdbcType=INTEGER}, #{wechatNum,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <select id="queryById" resultMap="BaseResultMap" parameterType="int">
  		select * from member where member_id=#{0}
  </select>
  <update id="updateById" parameterType="com.forest.entity.Member">
  		 update member
    set phoen = #{phoen,jdbcType=INTEGER},
      member_name = #{memberName,jdbcType=VARCHAR},
      ml_id = #{mlId,jdbcType=SMALLINT},
      password = #{password,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      street = #{street,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL},
      integral = #{integral,jdbcType=INTEGER},
      wechat_num = #{wechatNum,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
  <update id="updatebi" parameterType="com.forest.entity.Member">
  		 update member
    set balance = #{balance,jdbcType=DECIMAL},
      integral = #{integral,jdbcType=INTEGER}
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
  
  <select id="queryCont" resultType="int" parameterType="int">
  			select count(*) from member where member_id=#{0}
  </select>
  
  <select id="queryBySyHy" resultMap="BaseResultMap">
  			SELECT * FROM member AS m
			LEFT JOIN member_level AS ml ON ml.`ml_id`=m.`ml_id`
			WHERE ml.`status`=0
  </select>
</mapper>