<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.forest.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.forest.entity.Account" >
    <id column="account_id" property="accountId" jdbcType="TINYINT" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="head_portrait_path" property="headPortraitPath" jdbcType="VARCHAR" />
    <result column="trade" property="trade" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    account_id, account, phone, password, head_portrait_path, trade
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.forest.entity.AccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Byte" >
    select 
    <include refid="Base_Column_List" />
    from account
    where account_id = #{accountId,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte" >
    delete from account
    where account_id = #{accountId,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.forest.entity.AccountExample" >
    delete from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.forest.entity.Account" >
    insert into account (account_id, account, phone, 
      password, head_portrait_path, trade
      )
    values (#{accountId,jdbcType=TINYINT}, #{account,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, 
      #{password,jdbcType=VARCHAR}, #{headPortraitPath,jdbcType=VARCHAR}, #{trade,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.forest.entity.Account" >
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="headPortraitPath != null" >
        head_portrait_path,
      </if>
      <if test="trade != null" >
        trade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=TINYINT},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="headPortraitPath != null" >
        #{headPortraitPath,jdbcType=VARCHAR},
      </if>
      <if test="trade != null" >
        #{trade,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.forest.entity.AccountExample" resultType="java.lang.Integer" >
    select count(*) from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update account
    <set >
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=TINYINT},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=CHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.headPortraitPath != null" >
        head_portrait_path = #{record.headPortraitPath,jdbcType=VARCHAR},
      </if>
      <if test="record.trade != null" >
        trade = #{record.trade,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update account
    set account_id = #{record.accountId,jdbcType=TINYINT},
      account = #{record.account,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=CHAR},
      password = #{record.password,jdbcType=VARCHAR},
      head_portrait_path = #{record.headPortraitPath,jdbcType=VARCHAR},
      trade = #{record.trade,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.forest.entity.Account" >
    update account
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="headPortraitPath != null" >
        head_portrait_path = #{headPortraitPath,jdbcType=VARCHAR},
      </if>
      <if test="trade != null" >
        trade = #{trade,jdbcType=VARCHAR},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.forest.entity.Account" >
    update account
    set account = #{account,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      password = #{password,jdbcType=VARCHAR},
      head_portrait_path = #{headPortraitPath,jdbcType=VARCHAR},
      trade = #{trade,jdbcType=VARCHAR}
    where account_id = #{accountId,jdbcType=TINYINT}
  </update>
</mapper>